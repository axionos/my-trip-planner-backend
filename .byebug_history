exit
Trip.all.last.days.length
Trip.all.last.days
Trip.all.last
exit
Trip.all.last.days
Trip.all.last
Day.all
c
exit
Trip.all.find{|trip| trip.title == title}.id
Trip.all.find{|trip| trip.title == title}
Trip.all
theTrip = current_user.trips.find{|trip| trip.title = params[:trip][:title]}
exit
Day.all
days
exit
Day.all
Day.all.destroy_all
days
Trip.all
Day.all
exit
Day.new(trip_id: 52) * 3
Day.new(trip_id: 52)
theTrip.id
theTrip = current_user.trips.find{|trip| trip.title = params[:trip][:title]}
current_user.trips.find{|trip| trip.title = params[:trip][:title]}
current_user.trips.find{|trip| trip.title = 'click'}
startDate
current_user.trips
exit
current_user.trips.map{|trip| trip.title == params[:trip][:title]}
current_user.trips.find{|trip| trip.title == params[:trip][:title]}
current_user.trips
exit
user.trips.find {|trip| trip.title == title}
user.trips.find {|trip| trip.id == }
title
title = params[:trip][:title]
params
user.trips
user = User.find(params[:trip][:user_id])
params
exit
params
exit
params
user
exit
params
endDate.mjd - startDate.mjd
startDate.mjd - endDate.mjd
startDate - endDate
endDate
startDate
exit
Date.parse([params[:startDate]) - Date.parse(params[:endDate])
params
end = Date.parse(params[:endDate])
start = Date.parse(params[:startDate])
params[:endDate] - params[:startDate]
params[:endDate]
end=params[:endDate]
start=params[:startDate]
params[:startDate]
params
exit
params[:startDate]
params(:startDate)
params
exit
params
exit
trips
    trips = @all.find_all { |trip| trip.user_id == current_user.id }
@all = Trip.all
trips
params
c
exit
exit!!!
exit
trip.errors.full_messages
trip.errors
trip
trip = Trip.create(trips_params)
exit
params
exit
user
params
exit
params
c
params
exit
params
exit
user_id = decoded_token[0]["user_id"]
  decoded_token = JWT.decode token, "otters", true, { algorithm: 'HS256' }
  token = request.headers["Authorization"]
request.headers["Authorization"]
request.headers
request["headers"]
request.key?
params
